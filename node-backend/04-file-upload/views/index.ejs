<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>파일 업로드</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <h2>가장 기본적인 설정</h2>
    <!-- 일반 폼 전송을 이용해서 파일 업로드 하기 -->
    <!-- enctype : application/x-www-form-urlencoded => 인코딩타입 꼭 바꿔줘야 함-->
    <!-- 파일을 전송하려면 multipart/form-data로 변경해야 함 -->
    <form action="/upload" method="post" enctype="multipart/form-data">
        <input type="file" name="userfile" />
        <br />
        <input type="text" name="title" />
        <br />
        <button type="submit">업로드</button>
    </form>

    <h2>multer storage를 이용한 설정</h2>
    <form action="/upload/detail" method="post" enctype="multipart/form-data">
        <input type="file" name="userfile" />
        <br />
        <input type="text" name="title" />
        <br />
        <button type="submit">업로드</button>
    </form>


    <h2>파일 여러개 업로드 (하나의 input 이용)</h2> 
    <form action="/upload/array" method="post" enctype="multipart/form-data">  
            <!-- input type file의 multipe 속성은 여러개의 파일을 선택할 수 있게 함 -->
        <input type="file" name="userfile" multiple />
        <br />
        <input type="text" name="title" />
        <br />
        <button type="submit">업로드</button>
    </form>

    <h2>파일 여러개 업로드 (여러 개의 input 이용)</h2>
    <form action="/upload/fields" method="post" enctype="multipart/form-data">  
    <input type="file" name="userfile1" multiple />
    <br />
    <input type="text" name="title1" />
    <br />
    <input type="file" name="userfile2"  />
    <br />
    <input type="text" name="title2" />
    <br />
    <button type="submit">업로드</button>
</form>

    <h2>동적 폼 전송(axios)을 이용한 파일 업로드</h2>
    <form name ="dynamic-upload">  
    <input type="file" name="userfile"/>
    <br />
    <input type="text" name="title" />
    <br />
    <button type="button" onclick="dynamicUpload()">업로드</button>
    </form>
    <div id="dynamic-upload-result">

    </div>
    

    <script>
        function dynamicUpload() {
            const form = document.forms['dynamic-upload'];
            
            const formData = new FormData(); // formData를 담을 수 있는 객체를 하나 만든 것. 
            // formData 객체의 append 메소드는 데이터를 추가할 때 사용. 
            // title이라는 네임의 데이터를 추가했음. 
            formData.append("title", form.title.value)    
            // type 이 file인 input 태그 선택해서 files 접근 해보면
            console.log("value", form.userfile.value)
            console.log("files", form.userfile.files)
            // input태그의 value로 이미지 파일을 가져올 수 없어서 이 아래줄로 한 것. 
            formData.append("userfile", form.userfile.files[0])
            // file 데이터를 추가했음. 

            // 아래 방식은 이미지 데이터를 정상적으로 처리할 수 없음. 그렇기 떄문에 formData 만든 것. 
            // const data = {
            //    title: form.title.value,
            //    userfile: form.userfile.value
            //}

            axios({
                method: "post",
                url: "/upload/dynamic",
                data: formData, // append 한 것들 여기로 넘김 
                headers: {
                    "Content-type" : "multipart/form-data"
                }
            }).then((res) => {
                console.log(res.data)
                const result = document.getElementById("dynamic-upload-result") 
                result.innerHTML = `<img src="/${res.data.src}" width="150"/>`
            })
        }
    </script>

</body>
</html>